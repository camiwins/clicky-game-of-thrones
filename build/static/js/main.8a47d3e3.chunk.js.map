{"version":3,"sources":["components/Wrapper.js","components/Header.js","components/Score.js","components/Navigation.js","components/Character.js","components/Board.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Header","Jumbotron_default","fluid","Container_default","Score","score","Navigation","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Navbar_default","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav_default","Item","components_Score","Component","Character","Image_default","src","image","roundedCircle","alt","onClick","shuffleArray","arr","map","Math","random","sort","b","Board","handleClick","pizza","console","log","name","setState","prevState","characters","charArray","_this2","components_Wrapper","Navigation_Navigation","components_Header","character","Character_Character","key","clicked","App","Board_Board","ReactDOM","render","src_App","document","getElementById"],"mappings":"g9BAMeA,MAJf,SAAiBC,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMK,6CCa1BC,MAXf,WACI,OAAOL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAWM,OAAK,GACvBP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,KACED,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,gHCLSO,EAFD,SAACV,GAAD,OAAYC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,UAAsCJ,EAAMW,QCGjDC,cACjB,SAAAA,EAAYZ,GAAO,IAAAa,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMhB,KAEDoB,MAAQ,CACTT,MAAO,GAJIE,wEASf,OAAQZ,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAQoB,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QAC3DxB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAOwB,MAAR,CAAcC,KAAK,SAAnB,eACA1B,EAAAC,EAAAC,cAACkB,EAAAnB,EAAO0B,OAAR,CAAeC,gBAAc,0BAC7B5B,EAAAC,EAAAC,cAACkB,EAAAnB,EAAO4B,SAAR,CAAiBC,GAAG,yBAChB9B,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAKE,UAAU,YAEfH,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KACID,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAI+B,KAAL,CAAU7B,UAAU,cAAaH,EAAAC,EAAAC,cAAC+B,EAAD,CAAOvB,MAAOK,KAAKI,MAAMT,mBAjBtCwB,8BCFnBC,mLAGnB,OACCnC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CACCoC,IAAKtB,KAAKhB,MAAMuC,MAAOC,eAAa,EACpCC,IAAI,OACJC,QAAS1B,KAAKhB,MAAM0C,iBAPeP,aCgBjCQ,EAAe,SAAAC,GAAG,OACtBA,EACGC,IAAI,SAAA3C,GAAC,MAAI,CAAC4C,KAAKC,SAAU7C,KACzB8C,KAAK,SAAC9C,EAAG+C,GAAJ,OAAU/C,EAAE,GAAK+C,EAAE,KACxBJ,IAAI,SAAA3C,GAAC,OAAIA,EAAE,MAIKgD,cAEnB,SAAAA,EAAYlD,GAAO,IAAAa,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,IACjBrC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoC,GAAA/B,KAAAH,KAAMhB,KAQRmD,YAAc,SAACC,GAAD,OAAW,WACvBC,QAAQC,IAAI,WAAYF,EAAMG,MAG9B1C,EAAK2C,SAAS,SAACC,GAAD,MAAgB,CAC5B9C,MAAO8C,EAAU9C,MAAQ,EACzB+C,WAAYf,EAAagB,QAb3B9C,EAAKO,MAAQ,CACXT,MAAO,EACP+C,WAAYf,EAAagB,IAJV9C,wEAmBV,IAAA+C,EAAA5C,KACP,OACEf,EAAAC,EAAAC,cAAC0D,EAAD,KACE5D,EAAAC,EAAAC,cAAC2D,EAAD,MACA7D,EAAAC,EAAAC,cAAC4D,EAAD,MACA9D,EAAAC,EAAAC,cAAA,mBAAWa,KAAKI,MAAMT,OACrBK,KAAKI,MAAMsC,WAAWb,IAAI,SAAAmB,GAAS,OAClC/D,EAAAC,EAAAC,cAAC8D,EAAD,CACE1B,MAAOyB,EAAUzB,MACjBgB,KAAMS,EAAUT,KAChBW,IAAKF,EAAUE,IACfC,QAASH,EAAUG,QACnBzB,QAASkB,EAAKT,YAAYa,eAjCH7B,aCZpBiC,mLAPX,OACEnE,EAAAC,EAAAC,cAAC0D,EAAD,KACE5D,EAAAC,EAAAC,cAACkE,EAAD,cALUlC,aCDlBmC,IAASC,OAAOtE,EAAAC,EAAAC,cAACqE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.8a47d3e3.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\n\n\nfunction Header () {\n    return <Jumbotron fluid>\n    <Container>\n      <h1>Clicky-Game</h1>\n      <p>\n        Click an image to earn points, but don't click more than once!\n      </p>\n    </Container>\n  </Jumbotron>;\n}\n\nexport default Header;","import React from 'react';\n\nconst Score = (props) => (<div className=\"score-keeper\">Score: {props.score}</div>);\n\nexport default Score;","import React, { Component } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Score from \"./Score\";\n\nexport default class Navigation extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            score: 0\n        };\n    }\n\n    render() {\n        return (<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/home\">Clicky-Game</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                </Nav>\n                <Nav>\n                    <Nav.Item className=\"text-white\"><Score score={this.state.score}/></Nav.Item>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>);\n    }\n}\n","import React, { Component } from \"react\";\nimport Image from 'react-bootstrap/Image';\n\nexport default class Character extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Image\n\t\t\t\tsrc={this.props.image} roundedCircle\n\t\t\t\talt=\"name\"\n\t\t\t\tonClick={this.props.onClick}\n\t\t\t/>\n\t\t)\n\t}\n}\n","// *** REACT ****\nimport React, { Component } from 'react';\n\n// *** CHARACTER ARRY ***\nimport charArray from \"../charArray.json\";\n\n// *** COMPONENTS ****\nimport Wrapper from \"./Wrapper\";\nimport Header from \"./Header\";\nimport Navigation from \"./Navigation\";\nimport Character from \"./Character\";\n\n// *** NOT USED ****\n// import Score from \"./Score\";\n// import Image from 'react-bootstrap/Image\n// import Nav from 'react-bootstrap/Nav';\n// import Navbar from 'react-bootstrap/Navbar';\n\n// *** CODE STARTS HERE ****\nconst shuffleArray = arr => (\n  arr\n    .map(a => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1])\n);\n\n\nexport default class Board extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      characters: shuffleArray(charArray)\n    };\n\n  }\n\n  handleClick = (pizza) => () => {\n    console.log('this is:', pizza.name);\n    // **** NOT FINISHED ****\n    // I need an if statement that schecks to see if the \"clicked\" state is false for that object and if it is, then set to true WHEN clicked and also add 1 to score. I didn't get time to finsh this part :( *sad* sorry archie, nick, taylor. I let you guys down! BUT THANKS FOR EVERYTHING\n    this.setState((prevState) => ({\n      score: prevState.score + 1,\n      characters: shuffleArray(charArray)\n    }));\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Navigation />\n        <Header />\n        <h1>Score {this.state.score}</h1>\n        {this.state.characters.map(character => (\n          <Character\n            image={character.image}\n            name={character.name}\n            key={character.key}\n            clicked={character.clicked}\n            onClick={this.handleClick(character)}\n          />\n        ))}\n      </Wrapper>\n    )\n  }\n};\n\n","import React, { Component } from \"react\";\nimport Board from \"./components/Board\";\nimport Wrapper from \"./components/Wrapper\";\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Wrapper>\n        <Board/>\n      </Wrapper>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}